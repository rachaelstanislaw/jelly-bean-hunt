{"ast":null,"code":"var _jsxFileName = \"/Users/rachaelstanislaw/Desktop/treasure-hunt-react/src/App.js\";\nimport React, { Component } from 'react';\nimport Square from './components/Square';\nimport './App.css';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startGame = () => {\n      let bean = Math.floor(Math.random() * 9);\n      let snail = Math.floor(Math.random() * 9);\n\n      if (bean === snail) {\n        snail = Math.floor(Math.random() * 9);\n        bean = Math.floor(Math.random() * 9);\n      }\n\n      this.setState({\n        jellyBeanLoc: bean,\n        snailLoc: snail\n      });\n      console.log(\"bean\", bean);\n    };\n\n    this.gameLogic = loc => {\n      let {\n        squares,\n        jellyBeanLoc,\n        snailLoc\n      } = this.state;\n      console.log(loc);\n\n      if (jellyBeanLoc !== null && snailLoc !== null) {\n        this.setState({\n          squares: squares.map((value, index) => {\n            if (loc === jellyBeanLoc && loc === index) {\n              return \"bean\";\n            } else if (loc === snailLoc && loc === index) {\n              return \"snail\";\n            } else {\n              return value;\n            }\n          })\n        });\n      }\n    };\n\n    this.state = {\n      squares: [...Array(9).fill(\"?\")],\n      jellyBeanLoc: null,\n      snailLoc: null\n    };\n  }\n\n  render() {\n    let {\n      squares\n    } = this.state;\n    let grid = squares.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Square, {\n        value: value,\n        index: index,\n        key: index,\n        gameLogic: this.gameLogic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"column1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"The Jelly Bean Crisis\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Help Miss Greta find her jelly beans! They fell out of the window all over the yard and she is too distraught to search herself. Find all the jelly beans before Miss Greta dies. Oh and keep an eye out for snails!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"- Miss Greta\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Start Game\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"column2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, grid))));\n  }\n\n}","map":{"version":3,"sources":["/Users/rachaelstanislaw/Desktop/treasure-hunt-react/src/App.js"],"names":["React","Component","Square","App","constructor","props","startGame","bean","Math","floor","random","snail","setState","jellyBeanLoc","snailLoc","console","log","gameLogic","loc","squares","state","map","value","index","Array","fill","render","grid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Square from './components/Square'\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n      this.state= {\n        squares: [...Array(9).fill(\"?\")],\n        jellyBeanLoc: null,\n        snailLoc: null\n      }\n  }\n\n  startGame = () => {\n    let bean = Math.floor(Math.random() * 9)\n    let snail = Math.floor(Math.random() * 9)\n    if(bean === snail) {\n      snail = Math.floor(Math.random() * 9)\n      bean = Math.floor(Math.random() * 9)\n    }\n    this.setState({\n      jellyBeanLoc: bean,\n      snailLoc: snail\n    })\n    console.log(\"bean\", bean);\n  }\n\n  gameLogic = (loc) => {\n    let { squares, jellyBeanLoc, snailLoc } = this.state\n    console.log(loc);\n    if(jellyBeanLoc !== null && snailLoc !== null) {\n      this.setState({ squares: squares.map((value, index) => {\n        if(loc === jellyBeanLoc && loc === index) {\n          return \"bean\"\n        } else if(loc === snailLoc && loc === index) {\n          return \"snail\"\n        } else {\n          return value\n        }\n      })})\n    }\n  }\n\n  render() {\n    let { squares } = this.state\n    let grid = squares.map((value, index) => {\n      return (\n        <Square\n          value={ value }\n          index={ index }\n          key={ index }\n          gameLogic={ this.gameLogic }\n        />\n      )\n    })\n    return(\n      <>\n        <div id=\"board\">\n          <div id=\"column1\">\n            <h1>The Jelly Bean Crisis</h1>\n            <p>Help Miss Greta find her jelly beans! They fell out of the window all over the yard and she is too distraught to search herself. Find all the jelly beans before Miss Greta dies. Oh and keep an eye out for snails!</p>\n            <p>\n            - Miss Greta\n            </p>\n            <button onClick={ this.startGame }>\n              Start Game\n            </button>\n          </div>\n          <div id=\"column2\">\n            <div id=\"grid\">\n              { grid }\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}