{"ast":null,"code":"var _jsxFileName = \"/Users/rachaelstanislaw/Desktop/treasure-hunt-react/src/App.js\";\nimport React, { Component } from 'react';\nimport Square from './components/Square';\nimport './App.css';\nimport beanBaby from './assets/beanBaby.png';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startGame = () => {\n      document.getElementById(\"button\").innerHTML = \"Try again\";\n      let bean = Math.floor(Math.random() * 9);\n      let snail = Math.floor(Math.random() * 9);\n\n      if (bean === snail) {\n        snail = Math.floor(Math.random() * 9);\n        bean = Math.floor(Math.random() * 9);\n      }\n\n      this.setState({\n        squares: [...Array(9).fill(\"?\")],\n        jellyBeanLoc: bean,\n        snailLoc: snail,\n        ounter: [...Array(5).fill(\"💧\")],\n        clickedBoxes: []\n      });\n      console.log(\"bean\", bean, \"snail\", snail);\n    };\n\n    this.gameLogic = loc => {\n      let {\n        squares,\n        counter,\n        jellyBeanLoc,\n        snailLoc,\n        clickedBoxes\n      } = this.state;\n      let newCounter = counter.slice();\n      newCounter.pop();\n\n      if (jellyBeanLoc !== null && snailLoc !== null) {\n        if (!clickedBoxes.includes(loc)) {\n          if (counter.length > 1) {\n            this.setState({\n              squares: squares.map((value, index) => {\n                if (loc === jellyBeanLoc && loc === index) {\n                  alert(\"winner!\");\n                  return \"🎉\";\n                } else if (loc === snailLoc && loc === index) {\n                  alert(\"You stepped on a snail! You go home to cry over your guilt.\");\n                  return \"🐌\";\n                } else if (loc === index) {\n                  return \"👣\";\n                } else {\n                  return value;\n                }\n              }),\n              counter: newCounter,\n              clickedBoxes: [...clickedBoxes, loc]\n            });\n          } else {\n            alert(\"Miss Greta died becasue she cried too much\");\n            this.setState({\n              jellyBeanLoc: null,\n              snailLoc: null\n            });\n          }\n        }\n\n        console.log(clickedBoxes);\n      }\n\n      if (loc === jellyBeanLoc || loc === snailLoc) {\n        this.setState({\n          jellyBeanLoc: null,\n          snailLoc: null\n        });\n      }\n    };\n\n    this.state = {\n      squares: [...Array(9).fill(\"?\")],\n      jellyBeanLoc: null,\n      snailLoc: null,\n      counter: [...Array(5).fill(\"💧\")],\n      clickedBoxes: []\n    };\n  }\n\n  render() {\n    let {\n      squares,\n      counter\n    } = this.state;\n    let grid = squares.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Square, {\n        value: value,\n        index: index,\n        key: index,\n        gameLogic: this.gameLogic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"column1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"The Jelly Bean Crisis\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Help Miss Greta find her jelly beans! They fell out of the window all over the yard and she is too distraught to search herself. Find all the jelly beans before Miss Greta runs out of tears and dies. Oh and keep an eye out for snails!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"- Miss Greta\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startGame,\n      id: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \"Start Game\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"column2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, grid), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Tears Remaining\"), counter)));\n  }\n\n}","map":{"version":3,"sources":["/Users/rachaelstanislaw/Desktop/treasure-hunt-react/src/App.js"],"names":["React","Component","Square","beanBaby","App","constructor","props","startGame","document","getElementById","innerHTML","bean","Math","floor","random","snail","setState","squares","Array","fill","jellyBeanLoc","snailLoc","ounter","clickedBoxes","console","log","gameLogic","loc","counter","state","newCounter","slice","pop","includes","length","map","value","index","alert","render","grid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Square from './components/Square'\nimport './App.css';\nimport beanBaby from './assets/beanBaby.png'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n      this.state= {\n        squares: [...Array(9).fill(\"?\")],\n        jellyBeanLoc: null,\n        snailLoc: null,\n        counter: [...Array(5).fill(\"💧\")],\n        clickedBoxes: []\n      }\n  }\n\n  startGame = () => {\n    document.getElementById(\"button\").innerHTML = \"Try again\"\n    let bean = Math.floor(Math.random() * 9)\n    let snail = Math.floor(Math.random() * 9)\n    if(bean === snail) {\n      snail = Math.floor(Math.random() * 9)\n      bean = Math.floor(Math.random() * 9)\n    }\n    this.setState({\n      squares: [...Array(9).fill(\"?\")],\n      jellyBeanLoc: bean,\n      snailLoc: snail,\n      ounter: [...Array(5).fill(\"💧\")],\n      clickedBoxes: []\n    })\n    console.log(\"bean\", bean, \"snail\", snail);\n  }\n\n  gameLogic = (loc) => {\n    let { squares, counter, jellyBeanLoc, snailLoc, clickedBoxes } = this.state\n    let newCounter = counter.slice()\n    newCounter.pop()\n    if(jellyBeanLoc !== null && snailLoc !== null) {\n      if(! clickedBoxes.includes(loc)){\n        if(counter.length > 1) {\n          this.setState({\n            squares: squares.map((value, index) => {\n              if(loc === jellyBeanLoc && loc === index) {\n                alert(\"winner!\")\n                return \"🎉\"\n              } else if(loc === snailLoc && loc === index) {\n                alert(\"You stepped on a snail! You go home to cry over your guilt.\")\n                return \"🐌\"\n              } else if(loc === index) {\n                return \"👣\"\n              } else {\n                return value\n              }\n            }),\n            counter: newCounter,\n            clickedBoxes: [...clickedBoxes, loc]\n          })\n        } else {\n          alert(\"Miss Greta died becasue she cried too much\")\n          this.setState({ jellyBeanLoc: null, snailLoc: null })\n        }\n      }\n      console.log(clickedBoxes);\n    }\n    if(loc === jellyBeanLoc || loc === snailLoc) {\n      this.setState({ jellyBeanLoc: null, snailLoc: null })\n    }\n  }\n\n  render() {\n    let { squares, counter } = this.state\n    let grid = squares.map((value, index) => {\n      return (\n        <Square\n          value={ value }\n          index={ index }\n          key={ index }\n          gameLogic={ this.gameLogic }\n        />\n      )\n    })\n    return(\n      <>\n        <div id=\"board\">\n          <div id=\"column1\">\n            <div id=\"intro\">\n              <h1>The Jelly Bean Crisis</h1>\n              <p>Help Miss Greta find her jelly beans! They fell out of the window all over the yard and she is too distraught to search herself. Find all the jelly beans before Miss Greta runs out of tears and dies. Oh and keep an eye out for snails!</p>\n              <p>\n              - Miss Greta\n              </p>\n              <button onClick={ this.startGame } id=\"button\">\n                Start Game\n              </button>\n            </div>\n          </div>\n          <div id=\"column2\">\n            <div id=\"grid\">\n              { grid }\n            </div>\n            <h4>Tears Remaining</h4>\n            { counter }\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}